<% layout('./layouts/boilerplate') %>
<section class="contactHero md:py-72 py-40 bg-blackBg text-center overflow-x-hidden">
    <h1 class="text-gold font-bold lg:text-[80px] text-4xl lg:leading-[97px] leading-[48px]">CONTACT US</h1>
</section>
<section class="bg-blackBg flex justify-center py-32 overflow-x-hidden">
    <div class="lg:w-[60%] w-[90%] grid lg:grid-cols-2 grid-cols-1 gap-14">
        <div class="order-2 lg:order-1">
            <h1 class="text-gold font-semibold lg:text-4xl text-2xl leading-10 mb-4">Get in touch</h1>
            <p class="text-[#D9D9D9] md:text-base text-sm font-medium">We are just a message away. How can we assist you?</p>
            <form id="contactForm" action="" class="w-full flex flex-col gap-3 mt-4" novalidate>
                <div class="w-full px-3 py-2 bg-[#161616] border border-[#212121] flex flex-col rounded-[8px]">
                    <label for="name" class="text-[#838383] text-xs font-medium mb-2">Name:</label>
                    <input
                        autocomplete="off"
                        required
                        type="text"
                        id="name"
                        name="name"
                        class="bg-inherit border border-[#212121] rounded-[4px] w-full px-4 py-2 focus:outline-none text-[#fff] text-sm font-light"
                    />
                </div>
                <div class="w-full px-3 py-2 bg-[#161616] border border-[#212121] flex flex-col rounded-[8px]">
                    <label for="phone" class="text-[#838383] text-xs font-medium mb-2">Phone Number:</label>
                    <input
                        autocomplete="off"
                        required
                        type="number"
                        id="phone"
                        name="phone"
                        class="bg-inherit border border-[#212121] rounded-[4px] w-full px-4 py-2 focus:outline-none text-[#fff] text-sm font-light"
                    />
                </div>
                <div class="w-full px-3 py-2 bg-[#161616] border border-[#212121] flex flex-col rounded-[8px]">
                    <label for="email" class="text-[#838383] text-xs font-medium mb-2">Email Address:</label>
                    <input
                        autocomplete="off"
                        required
                        type="email"
                        id="email"
                        name="email"
                        class="bg-inherit border border-[#212121] rounded-[4px] w-full px-4 py-2 focus:outline-none text-[#fff] text-sm font-light"
                    />
                </div>
                <div class="w-full px-3 py-2 bg-[#161616] border border-[#212121] flex flex-col rounded-[8px]">
                    <label for="message" class="text-[#838383] text-xs font-medium mb-2">Message:</label>
                    <input
                        autocomplete="off"
                        required
                        type="text"
                        id="message"
                        name="message"
                        class="bg-inherit border border-[#212121] rounded-[4px] w-full px-4 py-2 focus:outline-none text-[#fff] min-h-[4rem] text-sm font-light"
                    />
                </div>
                <button
                    id="submitBtn"
                    type="button"
                    class="w-full mt-4 text-[#000] font-semibold bg-gold flex justify-center items-center py-3 rounded-[16px] transition-all duration-300 hover:bg-[#BF973E] hover:rounded-[6px]"
                >
                    Submit
                </button>
                <button id="googleCaptcha" class="hidden"></button>
            </form>
        </div>
        <div class="right hide flex items-center justify-center order-1 lg:order-2">
            <img src="/images/contact/two.png" alt="" class="lg:h-[80%] h-full object-cover rounded-[12px]" />
        </div>
    </div>
</section>
<section class="bg-blackBg flex justify-center py-16 overflow-x-hidden">
    <div class="lg:w-[75%] w-[90%] flex flex-col items-center justify-center text-center">
        <h1 class="text-gold font-semibold lg:text-4xl text-2xl leading-10 mb-2">For enquiries, contact us at</h1>
        <p class="text-[#D9D9D9] font-medium leading-7 2xl:max-w-[500px] mx-auto">
            Office Address <br />
            NICON Plaza, Plot 242 Muhammadu Buhari Way, Central Business District, Abuja, NigeriaÂ 
        </p>
        <div class="flex items-center justify-center gap-6 mt-6">
            <a href="https://web.facebook.com/profile.php?id=61562166724128" target="_blank" class="social-links">
                <img src="/images/facebookBlack.png" alt="" class="w-[38px] h-[38px]" />
            </a>
            <a href="https://x.com/TRAZlimited" target="_blank" class="social-links">
                <img src="/images/twitterBlack.png" alt="" class="w-[38px] h-[38px]" />
            </a>
            <a href="https://www.linkedin.com/company/104546074/" target="_blank" class="social-links">
                <img src="/images/linkedinBlack.png" alt="" class="w-[38px] h-[38px]" />
            </a>
            <a href="https://medium.com/@TRAZlimited" target="_blank" class="social-links">
                <img src="/images/medium.png" alt="" class="w-[38px] h-[38px]" />
            </a>
            <a href="https://www.instagram.com/trazlimited?igsh=ajQ3eDBmdzg0aHVn&utm_source=qr" target="_blank" class="social-links">
                <img src="/images/instagramBlack.png" alt="" class="w-[38px] h-[38px]" />
            </a>
        </div>
    </div>
</section>

<script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
<script src="https://www.google.com/recaptcha/api.js"></script>
<script>
    const clientKey = "<%= clientKey %>";
    const regexp_email = new RegExp(/^[_A-Za-z0-9-\+]+(\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\.[A-Za-z0-9]+)*(\.[A-Za-z]{2,})$/i);
    const regexp_phone = new RegExp(/^([0-9]{1,3})([7-9][0-9]{9}|[1-9]{1,2}[0-9]{7})$/i);
    function validateInputs(containerId) {
        const requiredInputs = $(containerId).find("input[required], select[required], textarea[required]");
        let isValid = true;
        let firstInvalidElement = null;

        requiredInputs.each(function () {
            let $input = $(this);

            if ($input.is("select")) {
                const selectedOption = $input.find("option:selected");
                if (selectedOption.prop("disabled") || selectedOption.prop("hidden")) {
                    $input.addClass("invalid");
                    if (!firstInvalidElement) firstInvalidElement = $input;
                    isValid = false;
                    return false;
                } else {
                    $input.removeClass("invalid");
                }
            } else if ($input.attr("type") === "file") {
                if ($input.get(0).files.length === 0) {
                    alert("Please select a file.");
                    $input.addClass("invalid");
                    if (!firstInvalidElement) firstInvalidElement = $input;
                    isValid = false;
                    return false;
                } else {
                    $input.removeClass("invalid");
                }
            } else {
                if ($input.val().trim() === "") {
                    $input.addClass("invalid");
                    if (!firstInvalidElement) firstInvalidElement = $input;
                    isValid = false;
                    return false;
                } else {
                    $input.removeClass("invalid");
                }

                if ($input.attr("type") === "email" && !regexp_email.test($input.val())) {
                    $input.addClass("invalid");
                    if (!firstInvalidElement) firstInvalidElement = $input;
                    isValid = false;
                    return false;
                }

                if ($input.attr("type") === "tel" && !regexp_phone.test($input.val())) {
                    $input.addClass("invalid");
                    if (!firstInvalidElement) firstInvalidElement = $input;
                    isValid = false;
                    return false;
                }
            }
        });

        if (firstInvalidElement) {
            firstInvalidElement.focus();
            setTimeout(() => firstInvalidElement.removeClass("invalid"), 2000);
        }

        return isValid;
    }

    let recaptchaWidgetId;

    const contactSubmit = (contactDetails) => {
        const myHeaders = new Headers();
        myHeaders.append("Content-Type", "application/json");

        const raw = JSON.stringify(contactDetails);

        const requestOptions = {
            method: "POST",
            headers: myHeaders,
            body: raw,
            redirect: "follow",
        };

        fetch("/contact", requestOptions)
            .then((response) => response.json())
            .then((res) => {
                if (!res.status) {
                    console.log(res);
                    Toastify({
                        text: res.errors?.[0] || res.message,
                        className: "warning",
                        duration: 3000,
                        close: true,
                        gravity: "top",
                        position: "right",
                        backgroundColor: "#EC3237",
                        stopOnFocus: true,
                    }).showToast();
                    grecaptcha.reset(recaptchaWidgetId);
                    $("#submitBtn").prop("disabled", false).text("Submit");

                    return;
                }
                Toastify({
                    text: "Submitted successfully",
                    className: "success",
                    duration: 4000,
                    close: true,
                    gravity: "top",
                    position: "right",
                    backgroundColor: "#E7B952",
                    stopOnFocus: true,
                }).showToast();
                setTimeout(() => {
                    window.location.href = "/";
                }, 3000);
            })
            .catch((error) => console.error(error));
    };

    $(document).ready(function () {
        grecaptcha.ready(function () {
            recaptchaWidgetId = grecaptcha.render("googleCaptcha", {
                sitekey: clientKey,
                size: "invisible",
                callback: onRecaptchaSuccess,
            });
        });

        $("#submitBtn").on("click", function (e) {
            e.preventDefault();
            if (!validateInputs("#contactForm")) {
                return;
            }
            $("#googleCaptcha").trigger("click");
        });

        $("#googleCaptcha").on("click", function () {
            if (recaptchaWidgetId) {
                grecaptcha.execute(recaptchaWidgetId);
            } else {
                console.error("reCAPTCHA widget not initialized");
            }
        });

        function onRecaptchaSuccess(token) {
            $("#submitBtn").prop("disabled", true).text("Submitting...");
            const serializedArray = $("#contactForm").serializeArray();
            const formData = {};
            $.each(serializedArray, function () {
                formData[this.name] = this.value;
            });

            formData["g-recaptcha-response"] = token;
            contactSubmit(formData);
        }
    });
</script>
